dim(Prostate)
str(Prostate)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(ggplot2)
library(kableExtra)
library(gridExtra)
library(stats)
library(gplots)
library(cluster)
library(factoextra)
library(FactoMineR)
load("Prostate.RData")
dim(Prostate)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(ggplot2)
library(kableExtra)
library(gridExtra)
library(stats)
library(gplots)
library(cluster)
library(factoextra)
library(FactoMineR)
load("Prostate.RData")
dim(Prostate)
str(Prostate)
Prostate %>%
sample_n(., 10, replace=FALSE) %>%
kbl(caption = "Prostate cancer data set (sample of 20)") %>%
kable_classic(full_width = F, html_font = "Cambria")
Prostate %>%
summary(.) %>%
kbl(caption = "Basic statistics. Prostate cancer data set") %>%
kable_classic(full_width = F, html_font = "Cambria")
library(purrr)
Prostate_reduced = Prostate[, c(1,2,5,6,8,9,10,11)]
str(Prostate_reduced)
dim(Prostate_reduced)
colSums((is.na((Prostate_reduced))))
#install.packages("chemometrics")
library(chemometrics)
md <- Moutlier(Prostate_reduced, quantile = 0.975, plot=FALSE)
md$cutoff
outliers <- which(md$md > md$cutoff)
head(outliers, 10) # show first 10 outliers according to Malhanobis distance
#install.packages('DDoutlier')
library("DDoutlier")
lof <- LOF(Prostate_reduced, k = 5) # outlier score with a neighborhood of 5 points
head(lof)
summary(lof) # some statistics
hist(lof)
plot(sort(lof), type = "l",  main = "LOF (K = 5)",
xlab = "Points sorted by LOF", ylab = "LOF")
lof_with_names = lof
names(lof_with_names) <- 1:nrow(Prostate)
sort(lof_with_names, decreasing = TRUE)[1:5]
outliers_lof <- which(lof > 2.0)
length(outliers_lof)
outliers_lof
Prostate_no_outliers = Prostate_reduced[-outliers,]
dim(Prostate_no_outliers)
library(GGally)
ggpairs(Prostate_no_outliers,
title="Correlation matrix. Phoneme data")
library(gridExtra)
library(ggplot2)
g1 <- ggplot(Prostate_no_outliers, aes(x=age)) + geom_density(alpha=0.8)
g2 <- ggplot(Prostate_no_outliers, aes(x=wt)) + geom_density(alpha=0.8)
g3 <- ggplot(Prostate_no_outliers, aes(x=sbp)) + geom_density(alpha=0.8)
g4 <- ggplot(Prostate_no_outliers, aes(x=dbp)) + geom_density(alpha=0.8)
g5 <- ggplot(Prostate_no_outliers, aes(x=hg)) + geom_density(alpha=0.8)
g6 <- ggplot(Prostate_no_outliers, aes(x=sz)) + geom_density(alpha=0.8)
g7 <- ggplot(Prostate_no_outliers, aes(x=sg)) + geom_density(alpha=0.8)
g8 <- ggplot(Prostate_no_outliers, aes(x=ap)) + geom_density(alpha=0.8)
grid.arrange(g1,g2, nrow=1); grid.arrange(g3,g4,nrow=1);grid.arrange(g5,g6,nrow=1); grid.arrange(g7,g8,nrow=1)
library(gridExtra)
library(ggpubr)
library(ggplot2)
g1 <- ggqqplot(Prostate_no_outliers, x="age", col=2, ggtheme = theme_gray(), title = "age Q-Q plot")
g2 <- ggqqplot(Prostate_no_outliers, x="wt", col=2, ggtheme = theme_gray(), title = "wt Q-Q plot")
g3 <- ggqqplot(Prostate_no_outliers, x="sbp", col=2, ggtheme = theme_gray(), title = "sbp Q-Q plot")
g4 <- ggqqplot(Prostate_no_outliers, x="dbp", col=2, ggtheme = theme_gray(), title = "dbp Q-Q plot")
g5 <- ggqqplot(Prostate_no_outliers, x="hg", col=2, ggtheme = theme_gray(), title = "hg Q-Q plot")
g6 <- ggqqplot(Prostate_no_outliers, x="sz", col=2, ggtheme = theme_gray(), title = "sz Q-Q plot")
g7 <- ggqqplot(Prostate_no_outliers, x="sg", col=2, ggtheme = theme_gray(), title = "sg Q-Q plot")
g8 <- ggqqplot(Prostate_no_outliers, x="ap", col=2, ggtheme = theme_gray(), title = "ap Q-Q plot")
grid.arrange(g1,g2, nrow=1); grid.arrange(g3,g4,nrow=1);grid.arrange(g5,g6,nrow=1); grid.arrange(g7,g8,nrow=1)
print(shapiro.test(Prostate_no_outliers$age))
print(shapiro.test(Prostate_no_outliers$wt))
print(shapiro.test(Prostate_no_outliers$sbp))
print(shapiro.test(Prostate_no_outliers$dbp))
print(shapiro.test(Prostate_no_outliers$hg))
print(shapiro.test(Prostate_no_outliers$sz))
print(shapiro.test(Prostate_no_outliers$sg))
print(shapiro.test(Prostate_no_outliers$ap))
Prostate_no_outliers_sc <- Prostate_no_outliers %>%
mutate_if(is.numeric, scale)
Prostate_no_outliers_sc %>%
sample_n(., 10, replace=FALSE) %>%
kbl(caption = "Prostate cancer data set (sample of 20)") %>%
kable_classic(full_width = F, html_font = "Cambria")
Prostate_no_outliers_sc %>%
summary(.) %>%
kbl(caption = "Basic statistics. Prostate cancer data set") %>%
kable_classic(full_width = F, html_font = "Cambria")
# vector of methods to compare
m <- c("average", "single", "complete", "ward")
names(m) <- c( "average", "single", "complete", "ward")
# function to compute coefficient
ac <- function(x) {
agnes(Prostate_no_outliers_sc, method = x)$ac
}
library(purrr)
map_dbl(m, ac)
agnes.ward <- agnes(Prostate_no_outliers_sc, method = "ward")
agnes_dend <- agnes.ward %>% as.dendrogram
pltree(agnes.ward, cex = 0.6, hang = -1, main = "Dendrogram of agnes")
(clust <- cutree(agnes.ward, k = 3))
fviz_cluster(list(data = Prostate_no_outliers_sc, cluster = clust))
pltree(agnes.ward, hang=-1, cex = 0.6)
rect.hclust(agnes.ward, k = 3, border = 2:5)
library(dendextend)
diana_dend <- diana(Prostate_no_outliers_sc) %>% as.dendrogram
diana_dend <- color_branches(diana_dend, k = 2)
diana.hc <- diana(Prostate_no_outliers_sc)
diana.hc$dc
pltree(diana.hc, cex = 0.6, hang = -1, main = "Dendrogram of diana")
(clust <- cutree(diana_dend, k = 4))
fviz_cluster(list(data = Prostate_no_outliers_sc, cluster = clust))
(clust <- cutree(diana_dend, k = 3))
fviz_cluster(list(data = Prostate_no_outliers_sc, cluster = clust))
pltree(diana.hc, hang=-1, cex = 0.6)
rect.hclust(diana.hc, k = 3, border = 2:5)
library(dendextend)
diana_dend <- diana.hc %>% as.dendrogram
tanglegram(agnes_dend, diana_dend)
pltree(agnes.ward, hang=-1, cex = 0.6)
rect.hclust(agnes.ward, k = 3, border = 2:5)
pltree(diana.hc, hang=-1, cex = 0.6)
rect.hclust(diana.hc, k = 3, border = 2:5)
res.pca <- PCA(Prostate_no_outliers_sc, ncp = 3, graph = FALSE)
fviz_pca_biplot(res.pca) +
theme_minimal()
res.hcpc <- HCPC(res.pca, graph = FALSE)
unique(res.hcpc$data.clust$clust)
res.hcpc$data.clust %>%
sample_n(., 10, replace=FALSE) %>%
kbl(caption = "Cluster allocation (sample of 10)") %>%
kable_classic(full_width = F, html_font = "Cambria")
res.hcpc$desc.var$quanti
res.hcpc$desc.axes$quanti
res.hcpc$desc.ind$para
fviz_dend(res.hcpc,
cex = 0.7,            # Label size
palette = "jco",      # Color palette
rect = TRUE,
rect_fill = TRUE, # Add rectangle around groups
rect_border = "jco",           # Rectangle color
labels_track_height = 0.8   # Increase the room for labels
)
fviz_cluster(res.hcpc,
repel = TRUE,            # Avoid label overlapping
show.clust.cent = TRUE, # Show cluster centers
palette = "jco",     # Color palette see
ggtheme = theme_minimal(),
main = "Factor map"
)
plot(res.hcpc, choice = "3D.map")
# set seed for repeating experiments
set.seed(67600)
fviz_nbclust(Prostate_no_outliers_sc, kmeans, method = "wss") +
geom_vline(xintercept = 2, linetype = 2)
fviz_nbclust(Prostate_no_outliers_sc, kmeans, method = "silhouette")
# we used B = ~500
gap_stat <- clusGap(Prostate_no_outliers_sc, FUN = kmeans,
nstart = 25, K.max = 10, B = 500)
fviz_gap_stat(gap_stat)
library(NbClust)
nc <- NbClust(Prostate_no_outliers_sc, min.nc=2, max.nc=10, method="kmeans")
k2 <- kmeans(Prostate_no_outliers_sc, centers = 2, nstart = 25)
k3 <- kmeans(Prostate_no_outliers_sc, centers = 3, nstart = 25)
p1 <- fviz_cluster(k2, geom = "point", data = Prostate_no_outliers_sc) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = Prostate_no_outliers_sc) + ggtitle("k = 3")
grid.arrange(p1, p2, nrow = 1)
aggregate(Prostate_no_outliers_sc, by=list(cluster=k3$cluster), mean) %>%
kbl(caption = "Mean by group and by variable") %>%
kable_classic(full_width = F, html_font = "Cambria")
k3$size
fviz_cluster(k3,  data = Prostate_no_outliers_sc) + ggtitle("k = 3")
res.hk <-hkmeans(Prostate_no_outliers_sc,3)
res.hk
fviz_dend(res.hk, cex = 0.6, palette = "jco",
rect = TRUE, rect_border = "jco", rect_fill = TRUE)
fviz_cluster(res.hk, palette = "jco", repel = TRUE,
ggtheme = theme_classic())
g1 <- fviz_cluster(k3,  data = Prostate_no_outliers_sc, palette = "jco", repel = TRUE)
g2 <- fviz_cluster(res.hk, palette = "jco", repel = TRUE)
grid.arrange(g1, g2)
library(mclust)
mc <- Mclust(Prostate_no_outliers_sc)
summary(mc) # Print a summary
mc$modelName
mc$G
mc$z  %>%
as.data.frame(.) %>%
sample_n(., 10, replace=FALSE) %>%
kbl(caption = "Probability to belong to a given cluster (sample of 10)") %>%
kable_classic(full_width = F, html_font = "Cambria")
head(mc$classification,10) # first 10 observations
library(factoextra)
fviz_mclust(mc, "BIC", palette = "jco")
library(factoextra)
fviz_mclust_bic(mc, model.names=mc$modelName, palette = "jco")
summary(mc$BIC)
plot.Mclust(mc, what="classification", addEllipses = FALSE)
plot.Mclust(mc, what="classification", addEllipses = TRUE)
fviz_mclust(mc, "classification", geom = "point",
pointsize = 1.5, palette = "jco")
plot.Mclust(mc, what="uncertainty")
fviz_mclust(mc, "uncertainty", palette = "jco")
plot.Mclust(mc, what="density", type = "image", col="steelblue", grid = 200)
plot.Mclust(mc, what="density", type="persp")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(ggplot2)
library(kableExtra)
library(gridExtra)
library(stats)
library(gplots)
library(cluster)
library(factoextra)
library(FactoMineR)
load("Prostate.RData")
dim(Prostate)
str(Prostate)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(ggplot2)
library(kableExtra)
library(gridExtra)
library(stats)
library(gplots)
library(cluster)
library(factoextra)
library(FactoMineR)
load("Prostate.RData")
dim(Prostate)
str(Prostate)
load("Prostate.RData")
load("Prostate.RData")
dim(Prostate)
str(Prostate)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(ggplot2)
library(kableExtra)
library(gridExtra)
library(stats)
library(gplots)
library(cluster)
library(factoextra)
library(FactoMineR)
load("Prostate.RData")
dim(Prostate)
Prostate %>%
sample_n(., 10, replace=FALSE) %>%
kbl(caption = "Prostate cancer data set (sample of 20)") %>%
kable_classic(full_width = F, html_font = "Cambria")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(ggplot2)
library(kableExtra)
library(gridExtra)
library(stats)
library(gplots)
library(cluster)
library(factoextra)
library(FactoMineR)
load("Prostate.RData")
dim(Prostate)
str(Prostate)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(ggplot2)
library(kableExtra)
library(gridExtra)
library(stats)
library(gplots)
library(cluster)
library(factoextra)
library(FactoMineR)
load("Prostate.RData")
dim(Prostate)
str(Prostate)
Prostate %>%
sample_n(., 10, replace=FALSE) %>%
kbl(caption = "Prostate cancer data set (sample of 20)") %>%
kable_classic(full_width = F, html_font = "Cambria")
Prostate_no_outliers = Prostate_reduced[-outliers_lof,]
Prostate %>%
sample_n(., 10, replace=FALSE) %>%
kbl(caption = "Prostate cancer data set (sample of 20)") %>%
kable_classic(full_width = F, html_font = "Cambria")
Prostate %>%
summary(.) %>%
kbl(caption = "Basic statistics. Prostate cancer data set") %>%
kable_classic(full_width = F, html_font = "Cambria")
library(purrr)
Prostate_reduced = Prostate[, c(1,2,5,6,8,9,10,11)]
str(Prostate_reduced)
dim(Prostate_reduced)
colSums((is.na((Prostate_reduced))))
#install.packages("chemometrics")
library(chemometrics)
md <- Moutlier(Prostate_reduced, quantile = 0.975, plot=FALSE)
md$cutoff
outliers <- which(md$md > md$cutoff)
head(outliers, 10) # show first 10 outliers according to Malhanobis distance
#install.packages('DDoutlier')
library("DDoutlier")
lof <- LOF(Prostate_reduced, k = 5) # outlier score with a neighborhood of 5 points
head(lof)
summary(lof) # some statistics
hist(lof)
plot(sort(lof), type = "l",  main = "LOF (K = 5)",
xlab = "Points sorted by LOF", ylab = "LOF")
lof_with_names = lof
names(lof_with_names) <- 1:nrow(Prostate)
sort(lof_with_names, decreasing = TRUE)[1:5]
outliers_lof <- which(lof > 2.0)
length(outliers_lof)
outliers_lof
Prostate_no_outliers = Prostate_reduced[-outliers_lof,]
dim(Prostate_no_outliers)
library(GGally)
ggpairs(Prostate_no_outliers,
title="Correlation matrix. Phoneme data")
library(gridExtra)
library(ggplot2)
g1 <- ggplot(Prostate_no_outliers, aes(x=age)) + geom_density(alpha=0.8)
g2 <- ggplot(Prostate_no_outliers, aes(x=wt)) + geom_density(alpha=0.8)
g3 <- ggplot(Prostate_no_outliers, aes(x=sbp)) + geom_density(alpha=0.8)
g4 <- ggplot(Prostate_no_outliers, aes(x=dbp)) + geom_density(alpha=0.8)
g5 <- ggplot(Prostate_no_outliers, aes(x=hg)) + geom_density(alpha=0.8)
g6 <- ggplot(Prostate_no_outliers, aes(x=sz)) + geom_density(alpha=0.8)
g7 <- ggplot(Prostate_no_outliers, aes(x=sg)) + geom_density(alpha=0.8)
g8 <- ggplot(Prostate_no_outliers, aes(x=ap)) + geom_density(alpha=0.8)
grid.arrange(g1,g2, nrow=1); grid.arrange(g3,g4,nrow=1);grid.arrange(g5,g6,nrow=1); grid.arrange(g7,g8,nrow=1)
library(gridExtra)
library(ggpubr)
library(ggplot2)
g1 <- ggqqplot(Prostate_no_outliers, x="age", col=2, ggtheme = theme_gray(), title = "age Q-Q plot")
g2 <- ggqqplot(Prostate_no_outliers, x="wt", col=2, ggtheme = theme_gray(), title = "wt Q-Q plot")
g3 <- ggqqplot(Prostate_no_outliers, x="sbp", col=2, ggtheme = theme_gray(), title = "sbp Q-Q plot")
g4 <- ggqqplot(Prostate_no_outliers, x="dbp", col=2, ggtheme = theme_gray(), title = "dbp Q-Q plot")
g5 <- ggqqplot(Prostate_no_outliers, x="hg", col=2, ggtheme = theme_gray(), title = "hg Q-Q plot")
g6 <- ggqqplot(Prostate_no_outliers, x="sz", col=2, ggtheme = theme_gray(), title = "sz Q-Q plot")
g7 <- ggqqplot(Prostate_no_outliers, x="sg", col=2, ggtheme = theme_gray(), title = "sg Q-Q plot")
g8 <- ggqqplot(Prostate_no_outliers, x="ap", col=2, ggtheme = theme_gray(), title = "ap Q-Q plot")
grid.arrange(g1,g2, nrow=1); grid.arrange(g3,g4,nrow=1);grid.arrange(g5,g6,nrow=1); grid.arrange(g7,g8,nrow=1)
print(shapiro.test(Prostate_no_outliers$age))
print(shapiro.test(Prostate_no_outliers$wt))
print(shapiro.test(Prostate_no_outliers$sbp))
print(shapiro.test(Prostate_no_outliers$dbp))
print(shapiro.test(Prostate_no_outliers$hg))
print(shapiro.test(Prostate_no_outliers$sz))
print(shapiro.test(Prostate_no_outliers$sg))
print(shapiro.test(Prostate_no_outliers$ap))
Prostate_no_outliers_sc <- Prostate_no_outliers %>%
mutate_if(is.numeric, scale)
Prostate_no_outliers_sc %>%
sample_n(., 10, replace=FALSE) %>%
kbl(caption = "Prostate cancer data set (sample of 20)") %>%
kable_classic(full_width = F, html_font = "Cambria")
Prostate_no_outliers_sc %>%
summary(.) %>%
kbl(caption = "Basic statistics. Prostate cancer data set") %>%
kable_classic(full_width = F, html_font = "Cambria")
# vector of methods to compare
m <- c("average", "single", "complete", "ward")
names(m) <- c( "average", "single", "complete", "ward")
# function to compute coefficient
ac <- function(x) {
agnes(Prostate_no_outliers_sc, method = x)$ac
}
library(purrr)
map_dbl(m, ac)
agnes.ward <- agnes(Prostate_no_outliers_sc, method = "ward")
agnes_dend <- agnes.ward %>% as.dendrogram
pltree(agnes.ward, cex = 0.6, hang = -1, main = "Dendrogram of agnes")
(clust <- cutree(agnes.ward, k = 3))
fviz_cluster(list(data = Prostate_no_outliers_sc, cluster = clust))
pltree(agnes.ward, hang=-1, cex = 0.6)
rect.hclust(agnes.ward, k = 3, border = 2:5)
library(dendextend)
diana_dend <- diana(Prostate_no_outliers_sc) %>% as.dendrogram
diana_dend <- color_branches(diana_dend, k = 2)
diana.hc <- diana(Prostate_no_outliers_sc)
diana.hc$dc
pltree(diana.hc, cex = 0.6, hang = -1, main = "Dendrogram of diana")
(clust <- cutree(diana_dend, k = 4))
fviz_cluster(list(data = Prostate_no_outliers_sc, cluster = clust))
(clust <- cutree(diana_dend, k = 3))
fviz_cluster(list(data = Prostate_no_outliers_sc, cluster = clust))
pltree(diana.hc, hang=-1, cex = 0.6)
rect.hclust(diana.hc, k = 3, border = 2:5)
library(dendextend)
diana_dend <- diana.hc %>% as.dendrogram
tanglegram(agnes_dend, diana_dend)
pltree(agnes.ward, hang=-1, cex = 0.6)
rect.hclust(agnes.ward, k = 3, border = 2:5)
pltree(diana.hc, hang=-1, cex = 0.6)
rect.hclust(diana.hc, k = 3, border = 2:5)
res.pca <- PCA(Prostate_no_outliers_sc, ncp = 3, graph = FALSE)
fviz_pca_biplot(res.pca) +
theme_minimal()
res.hcpc <- HCPC(res.pca, graph = FALSE)
unique(res.hcpc$data.clust$clust)
res.hcpc$data.clust %>%
sample_n(., 10, replace=FALSE) %>%
kbl(caption = "Cluster allocation (sample of 10)") %>%
kable_classic(full_width = F, html_font = "Cambria")
res.hcpc$desc.var$quanti
res.hcpc$desc.axes$quanti
res.hcpc$desc.ind$para
fviz_dend(res.hcpc,
cex = 0.7,            # Label size
palette = "jco",      # Color palette
rect = TRUE,
rect_fill = TRUE, # Add rectangle around groups
rect_border = "jco",           # Rectangle color
labels_track_height = 0.8   # Increase the room for labels
)
fviz_cluster(res.hcpc,
repel = TRUE,            # Avoid label overlapping
show.clust.cent = TRUE, # Show cluster centers
palette = "jco",     # Color palette see
ggtheme = theme_minimal(),
main = "Factor map"
)
plot(res.hcpc, choice = "3D.map")
# set seed for repeating experiments
set.seed(67600)
fviz_nbclust(Prostate_no_outliers_sc, kmeans, method = "wss") +
geom_vline(xintercept = 2, linetype = 2)
fviz_nbclust(Prostate_no_outliers_sc, kmeans, method = "silhouette")
# we used B = ~500
gap_stat <- clusGap(Prostate_no_outliers_sc, FUN = kmeans,
nstart = 25, K.max = 10, B = 500)
fviz_gap_stat(gap_stat)
library(NbClust)
nc <- NbClust(Prostate_no_outliers_sc, min.nc=2, max.nc=10, method="kmeans")
k2 <- kmeans(Prostate_no_outliers_sc, centers = 2, nstart = 25)
k3 <- kmeans(Prostate_no_outliers_sc, centers = 3, nstart = 25)
p1 <- fviz_cluster(k2, geom = "point", data = Prostate_no_outliers_sc) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = Prostate_no_outliers_sc) + ggtitle("k = 3")
grid.arrange(p1, p2, nrow = 1)
aggregate(Prostate_no_outliers_sc, by=list(cluster=k3$cluster), mean) %>%
kbl(caption = "Mean by group and by variable") %>%
kable_classic(full_width = F, html_font = "Cambria")
k3$size
fviz_cluster(k3,  data = Prostate_no_outliers_sc) + ggtitle("k = 3")
res.hk <-hkmeans(Prostate_no_outliers_sc,3)
res.hk
fviz_dend(res.hk, cex = 0.6, palette = "jco",
rect = TRUE, rect_border = "jco", rect_fill = TRUE)
fviz_cluster(res.hk, palette = "jco", repel = TRUE,
ggtheme = theme_classic())
g1 <- fviz_cluster(k3,  data = Prostate_no_outliers_sc, palette = "jco", repel = TRUE)
g2 <- fviz_cluster(res.hk, palette = "jco", repel = TRUE)
grid.arrange(g1, g2)
library(mclust)
mc <- Mclust(Prostate_no_outliers_sc)
summary(mc) # Print a summary
mc$modelName
mc$G
mc$z  %>%
as.data.frame(.) %>%
sample_n(., 10, replace=FALSE) %>%
kbl(caption = "Probability to belong to a given cluster (sample of 10)") %>%
kable_classic(full_width = F, html_font = "Cambria")
head(mc$classification,10) # first 10 observations
library(factoextra)
fviz_mclust(mc, "BIC", palette = "jco")
library(factoextra)
fviz_mclust_bic(mc, model.names=mc$modelName, palette = "jco")
summary(mc$BIC)
plot.Mclust(mc, what="classification", addEllipses = FALSE)
plot.Mclust(mc, what="classification", addEllipses = TRUE)
fviz_mclust(mc, "classification", geom = "point",
pointsize = 1.5, palette = "jco")
plot.Mclust(mc, what="uncertainty")
fviz_mclust(mc, "uncertainty", palette = "jco")
plot.Mclust(mc, what="density", type = "image", col="steelblue", grid = 200)
plot.Mclust(mc, what="density", type="persp")
# Classification: plot showing the clustering
fviz_mclust(mc, "classification", geom = "point",
pointsize = 1.5, palette = "jco",
choose.vars = c("sg", "dbp"))
drmc <- MclustDR(mc, lambda = 1)
summary(drmc)
plot(drmc, what = "contour")
plot(drmc, what = "density")
save.image(file="Clustering.RData")
